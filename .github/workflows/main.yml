name: main

on: [push, pull_request]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  EMSDK_NUM_CORES: 2
  EMCC_CORES: 2
  CCACHE_DIR: /tmp/ccache

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: 3.10.2
      - uses: pre-commit/action@v2.0.3

  test-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v3
        with:
          python-version: 3.10.2

      - name: Install requirements
        shell: bash -l {0}
        run: |
          mkdir test-results
          cd pyodide-build && python3 -m pip install -e ".[test]" && cd ..
          python3 -m pip install pytest-cov hypothesis pytz
      - name: Run tests
        shell: bash -l {0}
        run: |
          PYODIDE_ROOT=. pytest \
              --junitxml=test-results/junit.xml \
              --verbose \
              --runtime=host \
              --cov=pyodide_build --cov=pyodide \
              src pyodide-build packages/micropip/ packages/_tests
      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false

  build-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite_build
        with:
          packages: core
          artifacts-prefix: core
          retention-days: 1

  build-no-numpy-dependents:
    runs-on: ubuntu-latest
    needs: [build-core]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite_build
        with:
          packages: no-numpy-dependents
          artifacts-prefix: no-numpy-dependents
          retention-days: 1

  build-packages:
    runs-on: ubuntu-latest
    needs: [build-no-numpy-dependents]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite_build
        with:
          packages: "*"
          artifacts-prefix: packages
          retention-days: 1

  test-core:
    runs-on: ubuntu-latest
    env:
      DISPLAY: :99

    needs: [build-core]
    strategy:
      fail-fast: false
      matrix:
        runner: [playwright]
        browser: [firefox, chrome]

    steps:
      - uses: actions/checkout@v2

      - name: Download dist artifact
        uses: actions/download-artifact@v2
        with:
          name: core-dist
          path: ./dist/

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: pyodide-env
          python-version: 3.10.2
          channels: conda-forge

      - name: install test requirements
        shell: bash -l {0}
        run: |
          pip install -r requirements.txt
          cd pyodide-build && pip install -e ".[test]" && cd ..
          # FIXME: playwright 1.23.0 has unknown performance issue on firefox
          pip install "playwright<1.23.0" && python -m playwright install

      - name: run core tests
        env:
          BROWSER: ${{ matrix.browser }}
          RUNNER: ${{ matrix.runner }}
        shell: bash -l {0}
        run: |
          ls -lh
          ls -lh dist/
          tools/pytest_wrapper.py src packages/micropip/ \
            -v \
            --runtime="${BROWSER}-no-host" \
            --runner "${RUNNER}" \
            --durations 50 \
            --junitxml=test-results/core_test.xml

      - name: run package tests
        env:
          BROWSER: ${{ matrix.browser }}
          RUNNER: ${{ matrix.runner }}
        shell: bash -l {0}
        run: |
          ls -lh
          ls -lh dist/
          tools/pytest_wrapper.py packages/*/test* \
            -v \
            -k "numpy and not joblib" \
            --runtime="${BROWSER}-no-host" \
            --runner "${RUNNER}" \
            --durations 50 \
            --junitxml=test-results/packages_test.xml

      - name: Test Summary
        uses: test-summary/action@v1
        with:
          paths: "test-results/*.xml"
        if: always()
