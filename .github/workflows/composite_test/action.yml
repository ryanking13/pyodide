name: "Test Pyodide"
description: "Run pytest on Pyodide"
inputs:
  test-params:
    description: "Parameters to pass to pytest"
    required: true
  cache-dir:
    description: "pytest cache directory"
    required: false
    default: ""
  artifacts-prefix:
    description: "prefix for artifacts"
    required: false
    default: "pyodide"
  retention-days:
    description: "days to keep dist artifacts"
    reqruied: false
    default: 1
outputs:
  build-artifacts:
    description: "build artifacts"
    value: ${{ steps.random-number-generator.outputs.random-number }}
  dist-artifacts:
    description: "dist artifacts"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  env:
    DISPLAY: :99
  strategy:
    fail-fast: false
    matrix:
      runner: [playwright]
      browser: [firefox, chrome]
  steps:
    - name: Download dist artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.artifacts-prefix }}-dist
        path: ./dist/

    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: pyodide-env
        python-version: 3.10.2
        channels: conda-forge

    - name: install test requirements
      shell: bash -l {0}
      run: |
        pip install pytest-pyodide
        pip install -r requirements.txt
        pip install -e pyodide-build
        # npm install -g node-fetch@2
        if [ -z "${{ inputs.cache-dir }}" ]; then
          export CACHE_DIR=".test_cache/.pytest_cache_$(echo $RANDOM | md5sum | head -c 10)"
        else
          export CACHE_DIR=".test_cache/${{ inputs.cache-dir }}"
        fi
        echo "pytest cache dir: $CACHE_DIR"
        # FIXME: playwright 1.23.0 has unknown performance issue on firefox
        # pip install "playwright<1.23.0" && python -m playwright install
        python -m playwright install

    - name: run tests
      env:
        BROWSER: ${{ matrix.browser }}
        RUNNER: ${{ matrix.runner }}
      shell: bash -l {0}
      run: |
        ls -lh
        ls -lh dist/
        tools/pytest_wrapper.py \
          --runtime="${BROWSER}-no-host" \
          --runner "${RUNNER}" \
          --verbose \
          --durations 50 \
          --benchmark-json=benchmark-time.json \
          --benchmark-columns=mean,min,max,stddev \
          ${{ inputs.test-params }} \
          -o cache_dir=${CACHE_DIR} \
          --junitxml=test-results/core_test.xml

    - name: Test Summary
      uses: test-summary/action@v1
      with:
        paths: "test-results/*.xml"
      if: always()
