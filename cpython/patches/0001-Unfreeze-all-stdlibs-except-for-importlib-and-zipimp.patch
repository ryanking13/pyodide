From 5b3c94d2959d0d19fbbdb9d6505fe19415184c84 Mon Sep 17 00:00:00 2001
From: ryanking13 <def6488@gmail.com>
Date: Mon, 30 Jan 2023 21:20:53 +0900
Subject: [PATCH 1/1] Unfreeze all stdlibs except for importlib and zipimport

---
 Makefile.pre.in                 | 124 +-------------------------------
 Python/frozen.c                 |  64 -----------------
 Tools/scripts/freeze_modules.py |  58 +++++++--------
 3 files changed, 31 insertions(+), 215 deletions(-)

diff --git a/Makefile.pre.in b/Makefile.pre.in
index b356f6293e..398e6f896a 100644
--- a/Makefile.pre.in
+++ b/Makefile.pre.in
@@ -1009,52 +1009,12 @@ _bootstrap_python: $(LIBRARY_OBJS_OMIT_FROZEN) Programs/_bootstrap_python.o Modu
 FROZEN_FILES_IN = \
 		Lib/importlib/_bootstrap.py \
 		Lib/importlib/_bootstrap_external.py \
-		Lib/zipimport.py \
-		Lib/abc.py \
-		Lib/codecs.py \
-		Lib/io.py \
-		Lib/_collections_abc.py \
-		Lib/_sitebuiltins.py \
-		Lib/genericpath.py \
-		Lib/ntpath.py \
-		Lib/posixpath.py \
-		Lib/os.py \
-		Lib/site.py \
-		Lib/stat.py \
-		Lib/importlib/util.py \
-		Lib/importlib/machinery.py \
-		Lib/runpy.py \
-		Lib/__hello__.py \
-		Lib/__phello__/__init__.py \
-		Lib/__phello__/ham/__init__.py \
-		Lib/__phello__/ham/eggs.py \
-		Lib/__phello__/spam.py \
-		Tools/freeze/flag.py
+		Lib/zipimport.py
 # End FROZEN_FILES_IN
 FROZEN_FILES_OUT = \
 		Python/frozen_modules/importlib._bootstrap.h \
 		Python/frozen_modules/importlib._bootstrap_external.h \
-		Python/frozen_modules/zipimport.h \
-		Python/frozen_modules/abc.h \
-		Python/frozen_modules/codecs.h \
-		Python/frozen_modules/io.h \
-		Python/frozen_modules/_collections_abc.h \
-		Python/frozen_modules/_sitebuiltins.h \
-		Python/frozen_modules/genericpath.h \
-		Python/frozen_modules/ntpath.h \
-		Python/frozen_modules/posixpath.h \
-		Python/frozen_modules/os.h \
-		Python/frozen_modules/site.h \
-		Python/frozen_modules/stat.h \
-		Python/frozen_modules/importlib.util.h \
-		Python/frozen_modules/importlib.machinery.h \
-		Python/frozen_modules/runpy.h \
-		Python/frozen_modules/__hello__.h \
-		Python/frozen_modules/__phello__.h \
-		Python/frozen_modules/__phello__.ham.h \
-		Python/frozen_modules/__phello__.ham.eggs.h \
-		Python/frozen_modules/__phello__.spam.h \
-		Python/frozen_modules/frozen_only.h
+		Python/frozen_modules/zipimport.h
 # End FROZEN_FILES_OUT
 
 Programs/_freeze_module.o: Programs/_freeze_module.c Makefile
@@ -1079,66 +1039,6 @@ Python/frozen_modules/importlib._bootstrap_external.h: Lib/importlib/_bootstrap_
 Python/frozen_modules/zipimport.h: Lib/zipimport.py $(FREEZE_MODULE_BOOTSTRAP_DEPS)
 	$(FREEZE_MODULE_BOOTSTRAP) zipimport $(srcdir)/Lib/zipimport.py Python/frozen_modules/zipimport.h
 
-Python/frozen_modules/abc.h: Lib/abc.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) abc $(srcdir)/Lib/abc.py Python/frozen_modules/abc.h
-
-Python/frozen_modules/codecs.h: Lib/codecs.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) codecs $(srcdir)/Lib/codecs.py Python/frozen_modules/codecs.h
-
-Python/frozen_modules/io.h: Lib/io.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) io $(srcdir)/Lib/io.py Python/frozen_modules/io.h
-
-Python/frozen_modules/_collections_abc.h: Lib/_collections_abc.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) _collections_abc $(srcdir)/Lib/_collections_abc.py Python/frozen_modules/_collections_abc.h
-
-Python/frozen_modules/_sitebuiltins.h: Lib/_sitebuiltins.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) _sitebuiltins $(srcdir)/Lib/_sitebuiltins.py Python/frozen_modules/_sitebuiltins.h
-
-Python/frozen_modules/genericpath.h: Lib/genericpath.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) genericpath $(srcdir)/Lib/genericpath.py Python/frozen_modules/genericpath.h
-
-Python/frozen_modules/ntpath.h: Lib/ntpath.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) ntpath $(srcdir)/Lib/ntpath.py Python/frozen_modules/ntpath.h
-
-Python/frozen_modules/posixpath.h: Lib/posixpath.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) posixpath $(srcdir)/Lib/posixpath.py Python/frozen_modules/posixpath.h
-
-Python/frozen_modules/os.h: Lib/os.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) os $(srcdir)/Lib/os.py Python/frozen_modules/os.h
-
-Python/frozen_modules/site.h: Lib/site.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) site $(srcdir)/Lib/site.py Python/frozen_modules/site.h
-
-Python/frozen_modules/stat.h: Lib/stat.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) stat $(srcdir)/Lib/stat.py Python/frozen_modules/stat.h
-
-Python/frozen_modules/importlib.util.h: Lib/importlib/util.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) importlib.util $(srcdir)/Lib/importlib/util.py Python/frozen_modules/importlib.util.h
-
-Python/frozen_modules/importlib.machinery.h: Lib/importlib/machinery.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) importlib.machinery $(srcdir)/Lib/importlib/machinery.py Python/frozen_modules/importlib.machinery.h
-
-Python/frozen_modules/runpy.h: Lib/runpy.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) runpy $(srcdir)/Lib/runpy.py Python/frozen_modules/runpy.h
-
-Python/frozen_modules/__hello__.h: Lib/__hello__.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) __hello__ $(srcdir)/Lib/__hello__.py Python/frozen_modules/__hello__.h
-
-Python/frozen_modules/__phello__.h: Lib/__phello__/__init__.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) __phello__ $(srcdir)/Lib/__phello__/__init__.py Python/frozen_modules/__phello__.h
-
-Python/frozen_modules/__phello__.ham.h: Lib/__phello__/ham/__init__.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) __phello__.ham $(srcdir)/Lib/__phello__/ham/__init__.py Python/frozen_modules/__phello__.ham.h
-
-Python/frozen_modules/__phello__.ham.eggs.h: Lib/__phello__/ham/eggs.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) __phello__.ham.eggs $(srcdir)/Lib/__phello__/ham/eggs.py Python/frozen_modules/__phello__.ham.eggs.h
-
-Python/frozen_modules/__phello__.spam.h: Lib/__phello__/spam.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) __phello__.spam $(srcdir)/Lib/__phello__/spam.py Python/frozen_modules/__phello__.spam.h
-
-Python/frozen_modules/frozen_only.h: Tools/freeze/flag.py $(FREEZE_MODULE_DEPS)
-	$(FREEZE_MODULE) frozen_only $(srcdir)/Tools/freeze/flag.py Python/frozen_modules/frozen_only.h
-
 # END: freezing modules
 
 Tools/scripts/freeze_modules.py: $(FREEZE_MODULE)
@@ -1162,26 +1062,6 @@ Python/deepfreeze/deepfreeze.c: $(DEEPFREEZE_DEPS)
 	Python/frozen_modules/importlib._bootstrap.h:importlib._bootstrap \
 	Python/frozen_modules/importlib._bootstrap_external.h:importlib._bootstrap_external \
 	Python/frozen_modules/zipimport.h:zipimport \
-	Python/frozen_modules/abc.h:abc \
-	Python/frozen_modules/codecs.h:codecs \
-	Python/frozen_modules/io.h:io \
-	Python/frozen_modules/_collections_abc.h:_collections_abc \
-	Python/frozen_modules/_sitebuiltins.h:_sitebuiltins \
-	Python/frozen_modules/genericpath.h:genericpath \
-	Python/frozen_modules/ntpath.h:ntpath \
-	Python/frozen_modules/posixpath.h:posixpath \
-	Python/frozen_modules/os.h:os \
-	Python/frozen_modules/site.h:site \
-	Python/frozen_modules/stat.h:stat \
-	Python/frozen_modules/importlib.util.h:importlib.util \
-	Python/frozen_modules/importlib.machinery.h:importlib.machinery \
-	Python/frozen_modules/runpy.h:runpy \
-	Python/frozen_modules/__hello__.h:__hello__ \
-	Python/frozen_modules/__phello__.h:__phello__ \
-	Python/frozen_modules/__phello__.ham.h:__phello__.ham \
-	Python/frozen_modules/__phello__.ham.eggs.h:__phello__.ham.eggs \
-	Python/frozen_modules/__phello__.spam.h:__phello__.spam \
-	Python/frozen_modules/frozen_only.h:frozen_only \
 	-o Python/deepfreeze/deepfreeze.c
 # END: deepfreeze modules
 	@echo "Note: Deepfreeze may have added some global objects,"
diff --git a/Python/frozen.c b/Python/frozen.c
index 8a2a724353..2ec98bf92e 100644
--- a/Python/frozen.c
+++ b/Python/frozen.c
@@ -49,32 +49,6 @@
 extern PyObject *_Py_get_importlib__bootstrap_toplevel(void);
 extern PyObject *_Py_get_importlib__bootstrap_external_toplevel(void);
 extern PyObject *_Py_get_zipimport_toplevel(void);
-extern PyObject *_Py_get_abc_toplevel(void);
-extern PyObject *_Py_get_codecs_toplevel(void);
-extern PyObject *_Py_get_io_toplevel(void);
-extern PyObject *_Py_get__collections_abc_toplevel(void);
-extern PyObject *_Py_get__sitebuiltins_toplevel(void);
-extern PyObject *_Py_get_genericpath_toplevel(void);
-extern PyObject *_Py_get_ntpath_toplevel(void);
-extern PyObject *_Py_get_posixpath_toplevel(void);
-extern PyObject *_Py_get_posixpath_toplevel(void);
-extern PyObject *_Py_get_os_toplevel(void);
-extern PyObject *_Py_get_site_toplevel(void);
-extern PyObject *_Py_get_stat_toplevel(void);
-extern PyObject *_Py_get_importlib_util_toplevel(void);
-extern PyObject *_Py_get_importlib_machinery_toplevel(void);
-extern PyObject *_Py_get_runpy_toplevel(void);
-extern PyObject *_Py_get___hello___toplevel(void);
-extern PyObject *_Py_get___hello___toplevel(void);
-extern PyObject *_Py_get___hello___toplevel(void);
-extern PyObject *_Py_get___hello___toplevel(void);
-extern PyObject *_Py_get___phello___toplevel(void);
-extern PyObject *_Py_get___phello___toplevel(void);
-extern PyObject *_Py_get___phello___ham_toplevel(void);
-extern PyObject *_Py_get___phello___ham_toplevel(void);
-extern PyObject *_Py_get___phello___ham_eggs_toplevel(void);
-extern PyObject *_Py_get___phello___spam_toplevel(void);
-extern PyObject *_Py_get_frozen_only_toplevel(void);
 /* End extern declarations */
 
 static const struct _frozen bootstrap_modules[] = {
@@ -84,40 +58,9 @@ static const struct _frozen bootstrap_modules[] = {
     {0, 0, 0} /* bootstrap sentinel */
 };
 static const struct _frozen stdlib_modules[] = {
-    /* stdlib - startup, without site (python -S) */
-    {"abc", NULL, 0, false, GET_CODE(abc)},
-    {"codecs", NULL, 0, false, GET_CODE(codecs)},
-    {"io", NULL, 0, false, GET_CODE(io)},
-
-    /* stdlib - startup, with site */
-    {"_collections_abc", NULL, 0, false, GET_CODE(_collections_abc)},
-    {"_sitebuiltins", NULL, 0, false, GET_CODE(_sitebuiltins)},
-    {"genericpath", NULL, 0, false, GET_CODE(genericpath)},
-    {"ntpath", NULL, 0, false, GET_CODE(ntpath)},
-    {"posixpath", NULL, 0, false, GET_CODE(posixpath)},
-    {"os.path", NULL, 0, false, GET_CODE(posixpath)},
-    {"os", NULL, 0, false, GET_CODE(os)},
-    {"site", NULL, 0, false, GET_CODE(site)},
-    {"stat", NULL, 0, false, GET_CODE(stat)},
-
-    /* runpy - run module with -m */
-    {"importlib.util", NULL, 0, false, GET_CODE(importlib_util)},
-    {"importlib.machinery", NULL, 0, false, GET_CODE(importlib_machinery)},
-    {"runpy", NULL, 0, false, GET_CODE(runpy)},
     {0, 0, 0} /* stdlib sentinel */
 };
 static const struct _frozen test_modules[] = {
-    {"__hello__", NULL, 0, false, GET_CODE(__hello__)},
-    {"__hello_alias__", NULL, 0, false, GET_CODE(__hello__)},
-    {"__phello_alias__", NULL, 0, true, GET_CODE(__hello__)},
-    {"__phello_alias__.spam", NULL, 0, false, GET_CODE(__hello__)},
-    {"__phello__", NULL, 0, true, GET_CODE(__phello__)},
-    {"__phello__.__init__", NULL, 0, false, GET_CODE(__phello__)},
-    {"__phello__.ham", NULL, 0, true, GET_CODE(__phello___ham)},
-    {"__phello__.ham.__init__", NULL, 0, false, GET_CODE(__phello___ham)},
-    {"__phello__.ham.eggs", NULL, 0, false, GET_CODE(__phello___ham_eggs)},
-    {"__phello__.spam", NULL, 0, false, GET_CODE(__phello___spam)},
-    {"__hello_only__", NULL, 0, false, GET_CODE(frozen_only)},
     {0, 0, 0} /* test sentinel */
 };
 const struct _frozen *_PyImport_FrozenBootstrap = bootstrap_modules;
@@ -127,13 +70,6 @@ const struct _frozen *_PyImport_FrozenTest = test_modules;
 static const struct _module_alias aliases[] = {
     {"_frozen_importlib", "importlib._bootstrap"},
     {"_frozen_importlib_external", "importlib._bootstrap_external"},
-    {"os.path", "posixpath"},
-    {"__hello_alias__", "__hello__"},
-    {"__phello_alias__", "__hello__"},
-    {"__phello_alias__.spam", "__hello__"},
-    {"__phello__.__init__", "<__phello__"},
-    {"__phello__.ham.__init__", "<__phello__.ham"},
-    {"__hello_only__", NULL},
     {0, 0} /* aliases sentinel */
 };
 const struct _module_alias *_PyImport_FrozenAliases = aliases;
diff --git a/Tools/scripts/freeze_modules.py b/Tools/scripts/freeze_modules.py
index dd208c7847..67755e17f0 100644
--- a/Tools/scripts/freeze_modules.py
+++ b/Tools/scripts/freeze_modules.py
@@ -47,39 +47,39 @@
         'zipimport',
         ]),
     ('stdlib - startup, without site (python -S)', [
-        'abc',
-        'codecs',
-        # For now we do not freeze the encodings, due # to the noise all
-        # those extra modules add to the text printed during the build.
-        # (See https://github.com/python/cpython/pull/28398#pullrequestreview-756856469.)
-        #'<encodings.*>',
-        'io',
+        # 'abc',
+        # 'codecs',
+        # # For now we do not freeze the encodings, due # to the noise all
+        # # those extra modules add to the text printed during the build.
+        # # (See https://github.com/python/cpython/pull/28398#pullrequestreview-756856469.)
+        # #'<encodings.*>',
+        # 'io',
         ]),
     ('stdlib - startup, with site', [
-        '_collections_abc',
-        '_sitebuiltins',
-        'genericpath',
-        'ntpath',
-        'posixpath',
-        # We must explicitly mark os.path as a frozen module
-        # even though it will never be imported.
-        f'{OS_PATH} : os.path',
-        'os',
-        'site',
-        'stat',
+        # '_collections_abc',
+        # '_sitebuiltins',
+        # 'genericpath',
+        # 'ntpath',
+        # 'posixpath',
+        # # We must explicitly mark os.path as a frozen module
+        # # even though it will never be imported.
+        # f'{OS_PATH} : os.path',
+        # 'os',
+        # 'site',
+        # 'stat',
         ]),
     ('runpy - run module with -m', [
-        "importlib.util",
-        "importlib.machinery",
-        "runpy",
+        # "importlib.util",
+        # "importlib.machinery",
+        # "runpy",
     ]),
     (TESTS_SECTION, [
-        '__hello__',
-        '__hello__ : __hello_alias__',
-        '__hello__ : <__phello_alias__>',
-        '__hello__ : __phello_alias__.spam',
-        '<__phello__.**.*>',
-        f'frozen_only : __hello_only__ = {FROZEN_ONLY}',
+        # '__hello__',
+        # '__hello__ : __hello_alias__',
+        # '__hello__ : <__phello_alias__>',
+        # '__hello__ : __phello_alias__.spam',
+        # '<__phello__.**.*>',
+        # f'frozen_only : __hello_only__ = {FROZEN_ONLY}',
         ]),
 ]
 BOOTSTRAP = {
@@ -521,8 +521,8 @@ def regen_frozen(modules, frozen_modules: bool):
 
     for lines in (bootstraplines, stdliblines, testlines):
         # TODO: Is this necessary any more?
-        if not lines[0]:
-            del lines[0]
+        # if not lines[0]:
+        #     del lines[0]
         for i, line in enumerate(lines):
             if line:
                 lines[i] = indent + line
-- 
2.29.2.windows.2

